// <auto-generated />
using System;
using FIT.FitApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitApi.Migrations
{
    [DbContext(typeof(FitApiContext))]
    partial class FitApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("FIT.FitApi.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DividendCurrency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportingCurrency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReportingMultiplier")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShareCurrency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("FIT.FitApi.Dividend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AmountPerShare")
                        .HasColumnType("REAL");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("PayoutDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("PeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("PeriodStart")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Dividends");
                });

            modelBuilder.Entity("FIT.FitApi.Reporting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NetIncome")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NetSales")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OutstandingShares")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("PeriodEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("PeriodStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalAssets")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalLiabilities")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Reportings");
                });

            modelBuilder.Entity("FIT.FitApi.SharePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("SharePrices");
                });

            modelBuilder.Entity("FIT.FitApi.Dividend", b =>
                {
                    b.HasOne("FIT.FitApi.Company", "Company")
                        .WithMany("Dividends")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FIT.FitApi.Reporting", b =>
                {
                    b.HasOne("FIT.FitApi.Company", "Company")
                        .WithMany("Reportings")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FIT.FitApi.SharePrice", b =>
                {
                    b.HasOne("FIT.FitApi.Company", "Company")
                        .WithMany("SharePrices")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("FIT.FitApi.Company", b =>
                {
                    b.Navigation("Dividends");

                    b.Navigation("Reportings");

                    b.Navigation("SharePrices");
                });
#pragma warning restore 612, 618
        }
    }
}
