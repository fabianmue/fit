services:
  fit-database:
    image: postgres:17-alpine
    container_name: fit-database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${FIT_DATABASE_PASSWORD}
    volumes:
      - /app/data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fit-network

  fit-database-migrate:
    image: ghcr.io/fabianmue/fit-database-migrate:${IMAGE_TAG}
    container_name: fit-database-migrate
    command: postgresql://postgres:${FIT_DATABASE_PASSWORD}@fit-database/fit -f migrate.sql
    depends_on:
      fit-database:
        condition: service_healthy
    networks:
      - fit-network

  fit-identity:
    image: ghcr.io/fabianmue/fit-identity:${IMAGE_TAG}
    container_name: fit-identity
    command: start --optimized
    ports:
      - "8443:8443"
      - "9000:9000"
    environment:
      KC_DB_URL: fit-database/fit-identity # FIXME: automatically create database if not exists
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: ${FIT_DATABASE_PASSWORD}
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${FIT_IDENTITY_ADMIN_PASSWORD}
      KC_HOSTNAME: fit-invest.ch
    restart: always
    healthcheck:
      test:
        ["CMD-SHELL", "curl --head -fsS https://localhost:9000/health/ready"]
      interval: 10s
      timeout: 30s
      retries: 5
    depends_on:
      fit-database:
        condition: service_healthy
    networks:
      - fit-network

  fit-backend:
    image: ghcr.io/fabianmue/fit-backend:${IMAGE_TAG}
    container_name: fit-backend
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      FIT_DATABASE_CONNECTIONSTRING: Host=fit-database;Database=fit;Username=postgres;Password=${FIT_DATABASE_PASSWORD};
    restart: always
    depends_on:
      fit-database-migrate:
        condition: service_completed_successfully
    networks:
      - fit-network

  fit-frontend:
    image: ghcr.io/fabianmue/fit-frontend:${IMAGE_TAG}
    container_name: fit-frontend
    ports:
      - "443:443"
    volumes:
      - /etc/letsencrypt:/app/certs:ro
    restart: always
    depends_on:
      fit-backend:
        condition: service_started
    networks:
      - fit-network

networks:
  fit-network:
    driver: bridge
