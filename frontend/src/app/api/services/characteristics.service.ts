/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { CharacteristicsCollectionReadDto } from '../models/characteristics-collection-read-dto';
import { characteristicsGet } from '../fn/characteristics/characteristics-get';
import { CharacteristicsGet$Params } from '../fn/characteristics/characteristics-get';

@Injectable({ providedIn: 'root' })
export class CharacteristicsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `characteristicsGet()` */
  static readonly CharacteristicsGetPath = '/Characteristics';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `characteristicsGet()` instead.
   *
   * This method doesn't expect any request body.
   */
  characteristicsGet$Response(params?: CharacteristicsGet$Params, context?: HttpContext): Observable<StrictHttpResponse<CharacteristicsCollectionReadDto>> {
    return characteristicsGet(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `characteristicsGet$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  characteristicsGet(params?: CharacteristicsGet$Params, context?: HttpContext): Observable<CharacteristicsCollectionReadDto> {
    return this.characteristicsGet$Response(params, context).pipe(
      map((r: StrictHttpResponse<CharacteristicsCollectionReadDto>): CharacteristicsCollectionReadDto => r.body)
    );
  }

}
