/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { companyNumberCharacteristicsIdDelete } from '../fn/company-number-characteristics/company-number-characteristics-id-delete';
import { CompanyNumberCharacteristicsIdDelete$Params } from '../fn/company-number-characteristics/company-number-characteristics-id-delete';
import { companyNumberCharacteristicsIdPut } from '../fn/company-number-characteristics/company-number-characteristics-id-put';
import { CompanyNumberCharacteristicsIdPut$Params } from '../fn/company-number-characteristics/company-number-characteristics-id-put';
import { companyNumberCharacteristicsPost } from '../fn/company-number-characteristics/company-number-characteristics-post';
import { CompanyNumberCharacteristicsPost$Params } from '../fn/company-number-characteristics/company-number-characteristics-post';

@Injectable({ providedIn: 'root' })
export class CompanyNumberCharacteristicsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `companyNumberCharacteristicsPost()` */
  static readonly CompanyNumberCharacteristicsPostPath = '/CompanyNumberCharacteristics';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `companyNumberCharacteristicsPost()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  companyNumberCharacteristicsPost$Response(params?: CompanyNumberCharacteristicsPost$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return companyNumberCharacteristicsPost(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `companyNumberCharacteristicsPost$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  companyNumberCharacteristicsPost(params?: CompanyNumberCharacteristicsPost$Params, context?: HttpContext): Observable<void> {
    return this.companyNumberCharacteristicsPost$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `companyNumberCharacteristicsIdPut()` */
  static readonly CompanyNumberCharacteristicsIdPutPath = '/CompanyNumberCharacteristics/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `companyNumberCharacteristicsIdPut()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  companyNumberCharacteristicsIdPut$Response(params: CompanyNumberCharacteristicsIdPut$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return companyNumberCharacteristicsIdPut(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `companyNumberCharacteristicsIdPut$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  companyNumberCharacteristicsIdPut(params: CompanyNumberCharacteristicsIdPut$Params, context?: HttpContext): Observable<void> {
    return this.companyNumberCharacteristicsIdPut$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `companyNumberCharacteristicsIdDelete()` */
  static readonly CompanyNumberCharacteristicsIdDeletePath = '/CompanyNumberCharacteristics/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `companyNumberCharacteristicsIdDelete()` instead.
   *
   * This method doesn't expect any request body.
   */
  companyNumberCharacteristicsIdDelete$Response(params: CompanyNumberCharacteristicsIdDelete$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return companyNumberCharacteristicsIdDelete(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `companyNumberCharacteristicsIdDelete$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  companyNumberCharacteristicsIdDelete(params: CompanyNumberCharacteristicsIdDelete$Params, context?: HttpContext): Observable<void> {
    return this.companyNumberCharacteristicsIdDelete$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
