/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { deleteCompanyHistoricCharacteristic } from '../fn/company-historic-characteristics/delete-company-historic-characteristic';
import { DeleteCompanyHistoricCharacteristic$Params } from '../fn/company-historic-characteristics/delete-company-historic-characteristic';
import { postCompanyHistoricCharacteristic } from '../fn/company-historic-characteristics/post-company-historic-characteristic';
import { PostCompanyHistoricCharacteristic$Params } from '../fn/company-historic-characteristics/post-company-historic-characteristic';
import { putCompanyHistoricCharacteristic } from '../fn/company-historic-characteristics/put-company-historic-characteristic';
import { PutCompanyHistoricCharacteristic$Params } from '../fn/company-historic-characteristics/put-company-historic-characteristic';

@Injectable({ providedIn: 'root' })
export class CompanyHistoricCharacteristicsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `postCompanyHistoricCharacteristic()` */
  static readonly PostCompanyHistoricCharacteristicPath = '/CompanyHistoricCharacteristics';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `postCompanyHistoricCharacteristic()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  postCompanyHistoricCharacteristic$Response(params?: PostCompanyHistoricCharacteristic$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return postCompanyHistoricCharacteristic(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `postCompanyHistoricCharacteristic$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  postCompanyHistoricCharacteristic(params?: PostCompanyHistoricCharacteristic$Params, context?: HttpContext): Observable<void> {
    return this.postCompanyHistoricCharacteristic$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `putCompanyHistoricCharacteristic()` */
  static readonly PutCompanyHistoricCharacteristicPath = '/CompanyHistoricCharacteristics/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `putCompanyHistoricCharacteristic()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  putCompanyHistoricCharacteristic$Response(params: PutCompanyHistoricCharacteristic$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return putCompanyHistoricCharacteristic(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `putCompanyHistoricCharacteristic$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  putCompanyHistoricCharacteristic(params: PutCompanyHistoricCharacteristic$Params, context?: HttpContext): Observable<void> {
    return this.putCompanyHistoricCharacteristic$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `deleteCompanyHistoricCharacteristic()` */
  static readonly DeleteCompanyHistoricCharacteristicPath = '/CompanyHistoricCharacteristics/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `deleteCompanyHistoricCharacteristic()` instead.
   *
   * This method doesn't expect any request body.
   */
  deleteCompanyHistoricCharacteristic$Response(params: DeleteCompanyHistoricCharacteristic$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return deleteCompanyHistoricCharacteristic(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `deleteCompanyHistoricCharacteristic$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  deleteCompanyHistoricCharacteristic(params: DeleteCompanyHistoricCharacteristic$Params, context?: HttpContext): Observable<void> {
    return this.deleteCompanyHistoricCharacteristic$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
